@model ISA.Models.Entities.Flight
@using ISA.Models.Entities
@inject ApplicationDbContext Context
@inject UserManager<ApplicationUser> UserManager

<script src="@Url.Content("~/lib/konva.min.js")"></script>

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>
@{
    var userId = "";
    var isAdmin = false;
    var isUser = false;
    if (User.Identity.IsAuthenticated)
    {
        userId = (await UserManager.GetUserAsync(User)).Id;
        isAdmin = User.Identity.IsAuthenticated && ((User.IsInRole("AirAdmin") && Context.Administration.Any(a => a.ApplicationUserId == userId && a.Provider == Model.Airplane.Airline.Provider)) || User.IsInRole("SysAdmin"));
        isUser = User.Identity.IsAuthenticated && User.IsInRole("User");
    }

}

<div>
    <h4>Flight</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Origin
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DepartureLocation.Destination.DestinationName)
        </dd>
        <dt>
            Destination
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ArrivalLocation.Destination.DestinationName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Departure)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Departure)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Arrival)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Arrival)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.KM)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.KM)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CarryOnBag)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CarryOnBag)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CheckedBag)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CheckedBag)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.BaggageDetails)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BaggageDetails)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Services)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Services)
        </dd>
    </dl>
</div>
@if (isAdmin)
{
    <div>
        <a asp-action="Edit" asp-route-id="@Model.FlightName">Edit</a>
    </div>
}


<div style="height:3px">
    <p id="seatInfo">Select a seat: </p>
    <form asp-controller="SeatDiscount" style="display:none" asp-action="Create" id="discountForm">
        <input type="hidden" id="flightName" name="flightName" value="@Model.FlightName" />
        <input type="hidden" id="airplaneName" name="airplaneName" value="@Model.Airplane.AirplaneName" />
        <input type="hidden" id="segmentName" name="segmentName" />
        <input type="hidden" id="seatName" name="seatName" />
        <input type="number" id="price" name="price" value="50" />
        <input type="submit" value="Add Discount" class="btn btn-default" />
    </form>
    <form asp-controller="SeatReservation" style="display:none" asp-action="Create" id="reservationForm">
        <input type="text" name="passport" placeholder="Passport" data-val-required="Required"/>
        <input type="text" name="firstName" placeholder="First Name" data-val-required="Required"/>
        <input type="text" name="lastName" placeholder="Last Name" data-val-required="Required"/>
        <input type="hidden" name="flightName" value="@Model.FlightName" />
        <input type="hidden" id="reservationSegmentName" name="segmentName" />
        <input type="hidden" id="reservationSeatName" name="seatName" />
        <input type="submit" value="Reserve" class="btn btn-default" />
    </form>
    <form asp-controller="SeatReservation" style="display:none" asp-action="Invite" id="inviteForm">
        <select id="friend" name="friendId" class="form-control" asp-items="@ViewBag.Friends"></select>
        <input type="submit" value="Invite" class="btn btn-default" />
        <input type="hidden" name="flightName" value="@Model.FlightName" />
        <input type="hidden" id="inviteSegmentName" name="segmentName" />
        <input type="hidden" id="inviteSeatName" name="seatName" />
    </form>
    <p id="reserved" style="display:none">A reservation excists.</p>
</div>

<div id="container" style="width:1000px; height:500px; margin: auto; padding-top: 50px; overflow: hidden"></div>

<script>
    var stage = new Konva.Stage({
        container: 'container',
        width: 1000,
        height: 500
    });

    var layer = new Konva.Layer();

    var selected = new String('0');
    var prevColor = 'black';
    var segments = [];
</script>

@foreach (var segment in ViewBag.Segments)
{
    <script>
            segments['@Html.Raw(segment.SegmentName)']='@Html.Raw(segment.Color)'
    </script>
}

@foreach (var seat in ViewBag.Seats)
{
    <script>
        var scale = 2;
        var seat = new Konva.Shape({
            sceneFunc: function (context, shape) {
            context.beginPath();
                context.moveTo(@Html.Raw(seat.X)-10 * scale, @Html.Raw(seat.Y)-9 * scale);
                context.lineTo(@Html.Raw(seat.X)-5 * scale, @Html.Raw(seat.Y)+8 * scale);
                context.lineTo(@Html.Raw(seat.X)+7.5 * scale, @Html.Raw(seat.Y)+8 * scale);
                context.quadraticCurveTo(@Html.Raw(seat.X)+12 * scale, @Html.Raw(seat.Y)+1 * scale,
                    @Html.Raw(seat.X)+8 * scale, @Html.Raw(seat.Y) + 0 * scale);
                context.lineTo(@Html.Raw(seat.X)+ 0 * scale, @Html.Raw(seat.Y)+0.5 * scale);
                context.lineTo(@Html.Raw(seat.X)-3 * scale, @Html.Raw(seat.Y)-8 * scale);
                context.quadraticCurveTo(@Html.Raw(seat.X)-4 * scale, @Html.Raw(seat.Y)-10 * scale,
                    @Html.Raw(seat.X)-10 * scale, @Html.Raw(seat.Y)-9 * scale);
            context.closePath();

            // (!) Konva specific method, it is very important
            context.fillStrokeShape(shape);
        },
        radius: 10,
        fill:segments['@Html.Raw(seat.SegmentName)'],
        stroke: 'black',
        strokeWidth: 1,
        draggable: false,
        id: '@Html.Raw(seat.SeatName)'
        });

    // add the shape to the layer
        layer.add(seat);

        seat.on('click', function ()
        {
            if (this.fill() === segments['@Html.Raw(seat.SegmentName)'])
            {
                if (selected != '0')
                {
                    var shape = stage.findOne(selected);
                    shape.fill(prevColor);
                }
                selected = '#' + this.id();
                prevColor = this.fill();
                document.getElementById('seatInfo').textContent = 'Seat: @Html.Raw(seat.SeatName)';
                this.fill('#FFFFFF');
                @if (isAdmin)
                {
                    @if (ViewBag.ReservedSeats.Contains(seat))
                    {
                        <text>
                            document.getElementById('segmentName').value = '';
                            document.getElementById('seatName').value = '';
                            document.getElementById('discountForm').style.display="none";
                            document.getElementById('reserved').style.display = "block";
                        </text>
                    }
                    else
                    {
                       <text>
                            document.getElementById('segmentName').value = '@Html.Raw(seat.SegmentName)';
                            document.getElementById('seatName').value = '@Html.Raw(seat.SeatName)';
                            document.getElementById('discountForm').style.display="block";
                            document.getElementById('reserved').style.display = "none";
                        </text>
                    }
                }
                @if (isUser)
                {
                    @if (ViewBag.ReservedSeats.Contains(seat))
                    {
                        <text>
                            document.getElementById('inviteSegmentName').value = '';
                            document.getElementById('inviteSeatName').value = '';
                            document.getElementById('reservationSegmentName').value = '';
                            document.getElementById('reservationSeatName').value = '';
                            document.getElementById('reserved').style.display = "block";
                            document.getElementById('reservationForm').style.display = "none";
                        </text>
                    }
                    else
                    {
                    <text>
                        document.getElementById('inviteSegmentName').value = '@Html.Raw(seat.SegmentName)';
                        document.getElementById('inviteSeatName').value = '@Html.Raw(seat.SeatName)';
                        document.getElementById('reservationSegmentName').value = '@Html.Raw(seat.SegmentName)';
                        document.getElementById('reservationSeatName').value = '@Html.Raw(seat.SeatName)';
                        document.getElementById('reserved').style.display = "none";
                        document.getElementById('reservationForm').style.display = "block";
                        document.getElementById('inviteForm').style.display = "block";
                    </text>
                    }
                }
            }
            else
            {
                this.fill(segments['@Html.Raw(seat.SegmentName)']);
                document.getElementById('seatInfo').textContent = 'Select a seat:';
                selected = new String('0');

                @if (isAdmin)
                {
                    <text>
                        document.getElementById('segmentName').value = "";
                        document.getElementById('seatName').value = "";
                        document.getElementById('discountForm').style.display = "none";
                        document.getElementById('reserved').style.display = "none";
                    </text>
                }
                document.getElementById('reservationForm').style.display = "none";
                document.getElementById('inviteForm').style.display = "none";
            }
            layer.draw();
        });
    </script>
}
<script>
    // add the layer to the stage
    stage.add(layer);
</script>

